// **********************************************************************
//
// Generated by the ORBacus IDL-to-C++ Translator
//
// Copyright (c) 2005
// IONA Technologies, Inc.
// Waltham, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.3.3

#ifndef ___GeneticTT_skel_h__
#define ___GeneticTT_skel_h__

#include <GeneticTT.h>


#ifndef OB_INTEGER_VERSION
#   error No ORBacus version defined! Is <OB/CORBA.h> included?
#endif

#ifndef OB_NO_VERSION_CHECK
#   if (OB_INTEGER_VERSION != 4030300L)
#       error ORBacus version mismatch!
#   endif
#endif

//
// IDL:Genetic:1.0
//
namespace POA_Genetic
{

//
// IDL:Genetic/GeneticTimeTable:1.0
//
class GeneticTimeTable : virtual public PortableServer::ServantBase
{
    GeneticTimeTable(const GeneticTimeTable&);
    void operator=(const GeneticTimeTable&);

protected:

    //
    // IDL:Genetic/GeneticTimeTable/updateParameters:1.0
    //
    void _OB_op_updateParameters(OB::Upcall_ptr);

    //
    // IDL:Genetic/GeneticTimeTable/getRandomPopulation:1.0
    //
    void _OB_op_getRandomPopulation(OB::Upcall_ptr);

    //
    // IDL:Genetic/GeneticTimeTable/mate:1.0
    //
    void _OB_op_mate(OB::Upcall_ptr);

    //
    // IDL:Genetic/GeneticTimeTable/tuples:1.0
    //
    void _OB_get_tuples(OB::Upcall_ptr);
    void _OB_set_tuples(OB::Upcall_ptr);

    //
    // IDL:Genetic/GeneticTimeTable/population:1.0
    //
    void _OB_get_population(OB::Upcall_ptr);
    void _OB_set_population(OB::Upcall_ptr);

public:

    GeneticTimeTable() { }

    virtual ::CORBA::Boolean _is_a(const char*)
        throw(::CORBA::SystemException);

    virtual ::CORBA::RepositoryId _primary_interface(
        const PortableServer::ObjectId&,
        PortableServer::POA_ptr);

    Genetic::GeneticTimeTable_ptr _this();

    virtual OB::DirectStubImpl_ptr _OB_createDirectStubImpl(
        PortableServer::POA_ptr,
        const PortableServer::ObjectId&);
    virtual void _OB_dispatch(OB::Upcall_ptr);

    //
    // IDL:Genetic/GeneticTimeTable/updateParameters:1.0
    //
    virtual void updateParameters(::CORBA::Long maxFitness,
                                  ::CORBA::Long periods,
                                  ::CORBA::Long naturalSelection)
        throw(::CORBA::SystemException) = 0;

    //
    // IDL:Genetic/GeneticTimeTable/getRandomPopulation:1.0
    //
    virtual ::Genetic::IndividualSeq* getRandomPopulation(::CORBA::Long number,
                                                          ::CORBA::Float_out meanFitness)
        throw(::CORBA::SystemException) = 0;

    //
    // IDL:Genetic/GeneticTimeTable/mate:1.0
    //
    virtual ::Genetic::IndividualSeq* mate(::CORBA::Long number,
                                           ::CORBA::Float_out meanFitness,
                                           ::CORBA::Long_out perfectPos)
        throw(::CORBA::SystemException) = 0;

    //
    // IDL:Genetic/GeneticTimeTable/tuples:1.0
    //
    virtual ::Genetic::TupleSeq* tuples()
        throw(::CORBA::SystemException) = 0;
    virtual void tuples(const ::Genetic::TupleSeq&)
        throw(::CORBA::SystemException) = 0;

    //
    // IDL:Genetic/GeneticTimeTable/population:1.0
    //
    virtual ::Genetic::IndividualSeq* population()
        throw(::CORBA::SystemException) = 0;
    virtual void population(const ::Genetic::IndividualSeq&)
        throw(::CORBA::SystemException) = 0;
};

} // End of namespace POA_Genetic

//
// IDL:Genetic:1.0
//
namespace OBDirectStubImpl_Genetic
{

//
// IDL:Genetic/GeneticTimeTable:1.0
//
class GeneticTimeTable : virtual public OBStubImpl_Genetic::GeneticTimeTable,
                         virtual public OB::DirectStubImpl
{
    GeneticTimeTable(const GeneticTimeTable&);
    void operator=(const GeneticTimeTable&);

protected:

#ifdef HAVE_VCPLUSPLUS_BUGS

    GeneticTimeTable() { }

#endif

    GeneticTimeTable(PortableServer::POA_ptr,
                     const PortableServer::ObjectId&,
                     PortableServer::ServantBase*);

    friend class POA_Genetic::GeneticTimeTable;

public:

    //
    // IDL:Genetic/GeneticTimeTable/updateParameters:1.0
    //
    virtual void updateParameters(::CORBA::Long maxFitness,
                                  ::CORBA::Long periods,
                                  ::CORBA::Long naturalSelection);

    //
    // IDL:Genetic/GeneticTimeTable/getRandomPopulation:1.0
    //
    virtual ::Genetic::IndividualSeq* getRandomPopulation(::CORBA::Long number,
                                                          ::CORBA::Float_out meanFitness);

    //
    // IDL:Genetic/GeneticTimeTable/mate:1.0
    //
    virtual ::Genetic::IndividualSeq* mate(::CORBA::Long number,
                                           ::CORBA::Float_out meanFitness,
                                           ::CORBA::Long_out perfectPos);

    //
    // IDL:Genetic/GeneticTimeTable/tuples:1.0
    //
    virtual ::Genetic::TupleSeq* tuples();
    virtual void tuples(const ::Genetic::TupleSeq&);

    //
    // IDL:Genetic/GeneticTimeTable/population:1.0
    //
    virtual ::Genetic::IndividualSeq* population();
    virtual void population(const ::Genetic::IndividualSeq&);
};

} // End of namespace OBDirectStubImpl_Genetic

#endif
